# configuration approach followed:
# - whenever possible, prefer pyproject.toml
# - for configurations insufficiently supported by pyproject.toml, use setup.cfg instead
# - setup.py discouraged; minimal stub included only for compatibility with legacy tools

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "3DChromatin"
description = "This project aims to predict the shape of the Chromatin using Hi-C interaction matrices as input"
authors = [
    { name = "Henry Valeyre", email = "hva@zurich.ibm.com" },
]
readme = "README.md"
# due to how PEP 440 defines version matching, prefer [incl, excl) definitions like below:
requires-python = ">=3.7, <3.11"
dependencies = ["click"]
version = "0.1.0"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "flake8",
    "pep8-naming",
    "mypy",
    "sphinx",
    "sphinx-autodoc-typehints",
    "better-apidoc",
    "six",
    "sphinx_rtd_theme",
    "myst-parser",
]

[project.scripts]
salutation = "3DChromatin.complex_module.core:formal_introduction"

[project.urls]
repository = "https://github.ibm.com/AI4SCR-DEV/3D-Chromatin"

[tool.black]
line-length = 88
skip-string-normalization = false
target-version = ['py37']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
force_to_top = ["rdkit", "scikit-learn"]

[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true
